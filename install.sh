#!/system/bin/sh
# AnderTools Installation Script - Enhanced Risk with Automation
# 100% Compatible with original Risk + Advanced Automation Features

# Installation configuration
SKIPMOUNT=false
PROPFILE=true
POSTFSDATA=false
LATESTARTSERVICE=true

# Directory paths
ANDERTOOLS_DIR="/sdcard/Android/AnderTools"
RISK_DIR="/sdcard/Android/Risk"
TERMUX_DIR="/data/data/com.termux/files/usr"

ui_print " "
ui_print "  ‚ïî‚ïê‚ïê‚ïê‚ïó‚îÄ‚îÄ‚îÄ‚ïî‚ïó    ‚ïî‚ïê‚ïê‚ïê‚ïó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïó"
ui_print "  ‚ïë‚ïî‚ïê‚ïó‚ïë‚îÄ‚îÄ‚îÄ‚ïë‚ïë    ‚ïë‚ïî‚ïê‚ïó‚ïë‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïö‚ïê‚ïê‚ïó‚ïê‚ïë"
ui_print "  ‚ïë‚ïö‚ïê‚ïù‚ï†‚ï¶‚ïê‚ïê‚ï£‚ïë‚ïî‚ïó  ‚ïë‚ïë‚îÄ‚ïë‚ï†‚ïê‚ïó‚ïî‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïó‚îÄ‚îÄ‚ïë‚ïî‚ï¨‚ïê‚ïê‚ï¶‚ïê‚ïê‚ï¶‚ïê‚ïê‚ï¶‚ïê‚ïê‚ï¶‚ïê‚ïó"
ui_print "  ‚ïë‚ïî‚ïó‚ïî‚ï¨‚ï£‚ïê‚ïê‚ï£‚ïö‚ïù‚ïù  ‚ïë‚ïö‚ïê‚ïù‚ïë‚ïî‚ïó‚ï£‚ïî‚ïó‚ïë‚ïë‚ïê‚ï£‚îÄ‚îÄ‚ïë‚ïë‚ïë‚ïî‚ïó‚ïë‚ïî‚ïó‚ïë‚ïë‚ïê‚ï£‚ïê‚ïê‚ï£‚ïî‚ïù"
ui_print "  ‚ïë‚ïë‚ïë‚ïö‚ï£‚ï†‚ïê‚ïê‚ïë‚ïî‚ïó‚ïó  ‚ïë‚ïî‚ïê‚ïó‚ïë‚ïë‚ïë‚ïë‚ïö‚ïù‚ïë‚ïë‚ïê‚ï£‚îÄ‚îÄ‚ïë‚ïö‚ï£‚ïö‚ïù‚ïë‚ïö‚ïù‚ïë‚ïë‚ïê‚ï¨‚ïê‚ïê‚ïë‚ïë"
ui_print "  ‚ïö‚ïù‚ïö‚ïê‚ï©‚ï©‚ïê‚ïê‚ï©‚ïù‚ïö‚ïù  ‚ïö‚ïù‚îÄ‚ïö‚ï©‚ïù‚ïö‚ï©‚ïê‚ïê‚ï©‚ïê‚ïê‚ïù‚îÄ‚îÄ‚ïö‚ïê‚ï©‚ïê‚ïê‚ï©‚ïê‚ïê‚ï©‚ïê‚ïê‚ï©‚ïê‚ïê‚ï©‚ïù"
ui_print " "
ui_print "  AnderTools - Enhanced Risk with Automation"
ui_print "  100% Compatible + Advanced Features"
ui_print " "

# System information
if [ "$KSU" == true ]; then
    ui_print "  KernelSu Ver: $KSU_VER"
    ui_print "  KernelSu Ver Code: $KSU_VER_CODE"
    ui_print "  KernelSu Kernel Ver Code: $KSU_KERNEL_VER_CODE"
else
    ui_print "  Magisk Ver: $MAGISK_VER"
    ui_print "  Magisk Ver Code: $MAGISK_VER_CODE"
fi
ui_print " "

sleep 1
ui_print "  ‚úÖ 100% Risk Compatibility Maintained"
ui_print "  ‚úÖ All Original Functions Preserved"
ui_print "  ‚úÖ Enhanced with Smart Automation"
ui_print "  ‚úÖ Gaming Optimization Improved"
ui_print "  ‚úÖ Advanced Memory Management"
sleep 1
ui_print " "

ui_print "- Setting up AnderTools..."

# Extract all module files
unzip -o "$ZIPFILE" 'config/*' -d $MODPATH >&2
unzip -o "$ZIPFILE" 'service.sh' -d $MODPATH >&2
unzip -o "$ZIPFILE" 'system.prop' -d $MODPATH >&2
unzip -o "$ZIPFILE" 'system/*' -d $MODPATH >&2

# Create AnderTools user directories
ui_print "- Creating user directories..."
mkdir -p "$ANDERTOOLS_DIR/config/profiles"
mkdir -p "$ANDERTOOLS_DIR/logs"
mkdir -p "$ANDERTOOLS_DIR/backups"

# Copy configuration files
cp $MODPATH/config/excluded_apps.txt "$ANDERTOOLS_DIR/config/"

# Risk compatibility setup
ui_print "- Setting up Risk compatibility..."
mkdir -p "$RISK_DIR"
# Create symbolic links for Risk compatibility
ln -sf "$ANDERTOOLS_DIR/config/excluded_apps.txt" "$RISK_DIR/excluded_apps.txt" 2>/dev/null
ln -sf "$ANDERTOOLS_DIR/logs/automation.log" "$RISK_DIR/risk.log" 2>/dev/null

# Set executable permissions
chmod +x "$MODPATH/system/bin/andertools"
chmod +x "$MODPATH/system/bin/risk"
chmod +x "$MODPATH/system/bin/automation_daemon"

# Create initial log files
touch "$ANDERTOOLS_DIR/logs/automation.log"
touch "$ANDERTOOLS_DIR/logs/risk.log"

# Create default user preferences
cat > "$ANDERTOOLS_DIR/config/user_settings.json" << EOF
{
  "automation_enabled": false,
  "auto_start_daemon": true,
  "log_level": "INFO",
  "risk_compatibility": true,
  "gaming_optimization": true
}
EOF

# Migrate existing Risk configuration if found
if [ -d "$RISK_DIR" ] && [ -f "$RISK_DIR/excluded_apps.txt" ] && [ ! -f "$ANDERTOOLS_DIR/config/migrated" ]; then
    ui_print "- Migrating existing Risk configuration..."
    cp "$RISK_DIR/excluded_apps.txt" "$ANDERTOOLS_DIR/config/excluded_apps_backup.txt" 2>/dev/null
    touch "$ANDERTOOLS_DIR/config/migrated"
fi

ui_print " "
ui_print "‚úÖ AnderTools installation completed!"
ui_print " "
ui_print "üìã Usage Instructions:"
ui_print "  ‚Ä¢ AnderTools: su -c andertools"
ui_print "  ‚Ä¢ Risk compatibility: su -c risk" 
ui_print "  ‚Ä¢ All original Risk commands work perfectly"
ui_print " "
ui_print "üöÄ New Features:"
ui_print "  ‚Ä¢ Smart automation (option 12 in menu)"
ui_print "  ‚Ä¢ Enhanced logging and monitoring"
ui_print "  ‚Ä¢ Improved gaming optimization"
ui_print "  ‚Ä¢ Background optimization daemon"
ui_print " "
ui_print "üìÅ Configuration:"
ui_print "  ‚Ä¢ AnderTools: $ANDERTOOLS_DIR/config/"
ui_print "  ‚Ä¢ Risk compatible: $RISK_DIR/"
ui_print "  ‚Ä¢ Logs: $ANDERTOOLS_DIR/logs/"
ui_print " "
ui_print "‚ö° Key Improvements:"
ui_print "  ‚Ä¢ ALL 30 original Risk functions included"
ui_print "  ‚Ä¢ Enhanced error handling and logging"
ui_print "  ‚Ä¢ Backward compatibility guaranteed"
ui_print "  ‚Ä¢ Automation without breaking existing features"
ui_print " "
ui_print "üîÑ The module will be active after reboot."
ui_print "   You can also start it manually:"
ui_print "   su -c andertools"
ui_print " "

# Set final permissions
set_permissions() {
    set_perm_recursive $MODPATH 0 0 0755 0644
    set_perm_recursive $MODPATH/system/bin 0 0 0777 0755
    set_perm $ANDERTOOLS_DIR 0 0 0755
    set_perm_recursive $ANDERTOOLS_DIR 1000 1000 0755 0644
}
